<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="false" scanPeriod="5 seconds" debug="false">
    <contextName>${contextName:-light4j}</contextName>
    <property name="logLevel" value="${logLevel:-INFO}"/>
    <property name="logPattern" value="%cn %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %X{cId} %logger{0}:%L %msg%n"/>
    
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${logPattern}</pattern>
        </encoder>
    </appender>
    
    <!-- ch.qos.logback.core.joran.conditional.PropertyWrapperForScripts -->
    <if condition='isDefined("logserver")'>
	    <then>
		    <if condition='isDefined("redis")'>
		    	<then>
		   			<appender name="REDIS" class="ch.qos.logback.classic.redis.RedisAppender">
						<key>${redis.key:-logserver}</key>
						<pubsub>${redis.pubsub:-true}</pubsub>
						<pushpop>${redis.pushpop:-false}</pushpop>
						<queueSize>${redis.queueSize:-10240}</queueSize>
						<host>${redis.host:-localhost}</host>
						<port>${redis.port:-6379}</port>
		   			</appender>
					<appender name="ASYNC_REDIS" class="ch.qos.logback.classic.AsyncAppender">
						<appender-ref ref="REDIS" />
						<IncludeCallerData>true</IncludeCallerData>
					</appender>
		    	</then>
		    	<else>
					<appender name="SOCKET" class="ch.qos.logback.classic.net.SocketAppender">
						<RemoteHost>logserver</RemoteHost>
						<Port>6000</Port>
						<QueueSize>10240</QueueSize>
						<ReconnectionDelay>10000</ReconnectionDelay>
						<IncludeCallerData>false</IncludeCallerData>
					</appender>
					<appender name="ASYNC_SOCKET" class="ch.qos.logback.classic.AsyncAppender">
						<appender-ref ref="SOCKET" />
						<IncludeCallerData>true</IncludeCallerData>
					</appender>
		    	</else>
		    </if>
	    </then>
	    <else>
		    <if condition='isDefined("logfile")'>
			    <then>
				    <if condition='property("logfile").isEmpty()'>
					    <then>
						    <property name="logfile" value="logs/light4j.log"/>
					    </then>
				    </if>
				    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
				        <file>${logfile}</file>
				        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				            <fileNamePattern>${logfile}.%d{yyyy-MM-dd}</fileNamePattern>
				        </rollingPolicy>
				        <encoder>
				            <pattern>${logPattern}</pattern>
				        </encoder>
				    </appender>
					<appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
						<appender-ref ref="FILE" />
						<IncludeCallerData>true</IncludeCallerData>
					</appender>
			    </then>
		    </if>
	    </else>
    </if>
    
    <logger name="jdbc.sqlonly" level="${log4jdbc.sqlonly:-info}"/>
    <logger name="jdbc.sqltiming" level="${log4jdbc.sqlonly:-off}"/>
    <logger name="jdbc.audit" level="${log4jdbc.audit:-off}"/>
    <logger name="jdbc.resultset" level="${log4jdbc.resultset:-off}"/>
    <logger name="jdbc.connection" level="${log4jdbc.connection:-off}"/>

	<root level="${logLevel}">
		<if condition='isDefined("logserver")'>
		    <then>
		    	<if condition='isDefined("redis")'>
		    		<then>
						<appender-ref ref="ASYNC_REDIS" />
		    		</then>
		    		<else>
						<appender-ref ref="ASYNC_SOCKET" />
		    		</else>
		    	</if>
		    </then>
		    <else>
				<if condition='isDefined("logfile")'>
				    <then>
						<appender-ref ref="ASYNC_FILE" />
				    </then>
				    <else>
						<appender-ref ref="STDOUT" />
				    </else>
				</if>
		    </else>
		</if>
	</root>
</configuration>